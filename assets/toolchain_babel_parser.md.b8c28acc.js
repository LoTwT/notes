import{_ as e,c as r,o as a,a as i}from"./app.a067e1d4.js";const b=JSON.parse('{"title":"Parser","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5386\u53F2","slug":"\u5386\u53F2","link":"#\u5386\u53F2","children":[]},{"level":2,"title":"\u6269\u5C55","slug":"\u6269\u5C55","link":"#\u6269\u5C55","children":[]},{"level":2,"title":"acorn \u63D2\u4EF6","slug":"acorn-\u63D2\u4EF6","link":"#acorn-\u63D2\u4EF6","children":[]}],"relativePath":"toolchain/babel/parser.md","lastUpdated":1669599731000}'),l={name:"toolchain/babel/parser.md"},t=i('<h1 id="parser" tabindex="-1">Parser <a class="header-anchor" href="#parser" aria-hidden="true">#</a></h1><p>Babel \u7684 parser \u57FA\u4E8E acorn \u6269\u5C55\u800C\u6765</p><h2 id="\u5386\u53F2" tabindex="-1">\u5386\u53F2 <a class="header-anchor" href="#\u5386\u53F2" aria-hidden="true">#</a></h2><ul><li>\u57FA\u4E8E Mozilla \u516C\u5E03\u7684 SpiderMonkey ( c++ ) \u7684 esprima \uFF0C\u540E\u6765\u5F62\u6210\u4E86 estree \u6807\u51C6</li><li>\u57FA\u4E8E estree \u6807\u51C6\u7684 acorn \uFF0C\u6BD4 esprima \u66F4\u5FEB\uFF0C\u4E14\u652F\u6301\u63D2\u4EF6</li><li>eslint \u7684 espree fork \u81EA exprima \uFF0C\u540E\u6765 espree 2.0 \u57FA\u4E8E acorn \u91CD\u65B0\u5B9E\u73B0</li><li>\u57FA\u4E8E acorn \u7684 Babel parser ( babylon ) \uFF0C\u5BF9 AST \u8282\u70B9\u548C\u5C5E\u6027\u505A\u4E86\u6269\u5C55\uFF0C\u5E76\u63D0\u4F9B\u4E86\u5404\u79CD\u63D2\u4EF6</li></ul><h2 id="\u6269\u5C55" tabindex="-1">\u6269\u5C55 <a class="header-anchor" href="#\u6269\u5C55" aria-hidden="true">#</a></h2><p>Babel \u57FA\u4E8E acorn \u63D2\u4EF6\u5BF9 estree AST \u505A\u4E86\u5982\u4E0B\u6269\u5C55</p><ul><li>\u628A Literal \u66FF\u6362\u4E3A StringLiteral \u3001NumericLiteral \u3001BigIntLiteral \u3001BooleanLiteral \u3001NullLiteral \u3001RegExpLiteral</li><li>\u628A Property \u66FF\u6362\u4E3A ObjectProperty \u548C ObjectMethod</li><li>\u628A MethodDefinition \u66FF\u6362\u4E3A ClassMethod</li><li>Program \u548C BlockStatement \u652F\u6301\u4E86 directives \u5C5E\u6027\uFF0C\u5BF9 <code>use strict</code> \u7B49\u6307\u4EE4\u7684\u89E3\u6790\uFF0C\u5BF9\u5E94 Directive \u548C DirectiveLiteral</li><li>ChainExpression \u66FF\u6362\u4E3A ObjectMemberExpression \u548C OptionalCallExpression</li><li>ImportExpression \u66FF\u6362\u4E3A CallExpression \u4E14 callee \u5C5E\u6027\u8BBE\u7F6E\u4E3A Import</li></ul><h2 id="acorn-\u63D2\u4EF6" tabindex="-1">acorn \u63D2\u4EF6 <a class="header-anchor" href="#acorn-\u63D2\u4EF6" aria-hidden="true">#</a></h2><p>acorn \u662F\u4E00\u4E2A Parser \u7C7B\uFF0C\u4E0D\u540C\u7684\u65B9\u6CD5\u5B9E\u73B0\u4E0D\u540C\u7684\u903B\u8F91\uFF0C\u63D2\u4EF6\u6269\u5C55\u5C31\u662F\u7EE7\u627F Parser \u7C7B\uFF0C\u91CD\u5199\u4E00\u4E9B\u65B9\u6CD5\u3002</p><p>parse \u7684\u8FC7\u7A0B\u662F <code>\u5206\u8BCD + \u7EC4\u88C5 AST</code> ( <code>\u8BCD\u6CD5\u5206\u6790 + \u8BED\u6CD5\u5206\u6790</code> ) \u3002</p>',10),o=[t];function s(n,c,d,p,h,_){return a(),r("div",null,o)}const m=e(l,[["render",s]]);export{b as __pageData,m as default};
